# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  locale: en
  locales: en|fr
  uploads_dir: "%kernel.project_dir%/public/uploads"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  app.listener.redirect_404_to_homepage:
    class: App\EventListener\Redirect404ToHomepageListener
    arguments:
      - "@router"
    tags:
      - {
          name: kernel.event_listener,
          event: kernel.exception,
          method: onKernelException,
        }

  acme_api.event.authentication_success_listener:
    class: App\EventListener\AuthenticationSuccessListener
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_authentication_success,
          method: onAuthenticationSuccessResponse,
        }

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  #sonata admin services
  admin.document:
    class: App\Admin\DocumentAdmin
    calls:
      - [setTranslationDomain, ["App"]]
    tags:
      - {
          name: sonata.admin,
          model_class: App\Entity\Document,
          controller: ~,
          manager_type: orm,
          group: Members,
          label: Documents (Pictures),
        }

  admin.batch:
    class: App\Admin\BatchAdmin
    calls:
      - [setTranslationDomain, ["App"]]
    tags:
      - {
          name: sonata.admin,
          model_class: App\Entity\Batch,
          controller: ~,
          manager_type: orm,
          group: Members,
          label: Batchs,
        }

  admin.member:
    class: App\Admin\MemberAdmin
    calls:
      - [setTranslationDomain, ["App"]]
    tags:
      - {
          name: sonata.admin,
          model_class: App\Entity\Member,
          controller: ~,
          manager_type: orm,
          group: Members,
          icon: "fas fa-people-arrows",
          label: Members List,
        }

  admin.position:
      class: App\Admin\PositionAdmin
      tags:
          - { name: sonata.admin, model_class: App\Entity\Position, controller: ~, manager_type: orm, group: Voting, label: Positions }

  admin.voting_session:
      class: App\Admin\VotingSessionAdmin
      tags:
          - { name: sonata.admin, model_class: App\Entity\VotingSession, controller: ~, manager_type: orm, group: Voting, label: Sessions }
      calls:
            - [addChild, ['@admin.candidat', 'session']]

  admin.candidat:
      class: App\Admin\CandidatAdmin
      tags:
          - { name: sonata.admin, model_class: App\Entity\Candidat, controller: ~, manager_type: orm, group: Voting, label: Candidats }
